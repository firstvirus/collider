using UserAnalyticsAPI.Application.Extensions.Filters;

namespace UserAnalyticsAPI.Application.Extensions.Services;

public static class SwaggerConfiguration
{
    public static IServiceCollection ConfigureSwagger(this IServiceCollection services)
    {
        services.AddControllers(options =>
        {
            options.Filters.Add(new ValidateModelAttribute());
        });

        services.AddEndpointsApiExplorer(); // –î–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö API
        services.AddSwaggerGen(options =>
        {
            // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å fallback-–∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            var swaggerVersion = Environment.GetEnvironmentVariable("SWAGGER_VERSION") ?? "v1";
            var swaggerTitle = Environment.GetEnvironmentVariable("SWAGGER_TITLE") ?? "NONAME Service API";
            var swaggerDescription = Environment.GetEnvironmentVariable("SWAGGER_DESCRIPTION") ?? """
                ## ENV –Ω–µ –ø–æ–¥–≥—Ä—É–∂–µ–Ω—ã!!!
                ### –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
                1. –ú–µ—Ç–æ–¥—ã —Ç—Ä–µ–±—É—é—â–∏–µ Bearier –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–º–µ—á–µ–Ω—ã üîí
                2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è JWE —Ç–æ–∫–µ–Ω
                """;

            options.SwaggerDoc(swaggerVersion, new Microsoft.OpenApi.Models.OpenApiInfo
            {
                Version = swaggerVersion,
                Title = swaggerTitle,
                Description = swaggerDescription
            });

            // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            options.AddSecurityDefinition("Bearer", new Microsoft.OpenApi.Models.OpenApiSecurityScheme
            {
                Name = "Authorization",
                Type = Microsoft.OpenApi.Models.SecuritySchemeType.Http,
                Scheme = "bearer",
                BearerFormat = "JWT",
                In = Microsoft.OpenApi.Models.ParameterLocation.Header,
                Description = "–í–≤–µ–¥–∏—Ç–µ JWE access —Ç–æ–∫–µ–Ω"
            });

            options.EnableAnnotations();
        });

        return services;
    }
}
